// FILE: jraieeemmgrid.cpp

#include <iomanip>
#include <grid.hpp>
#include <strutils.hpp>
#include <utils.hpp>

const short InputJRAIEEEMMGridStream::anl_chipsi_level_types[120]={100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,1,1,1,1,1};
const float InputJRAIEEEMMGridStream::anl_chipsi_level_values[120]={1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,0.,0.,0.,0.,0.};
const short InputJRAIEEEMMGridStream::anl_chipsi_parameters[120]={44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,1,44,43,35,36};
const short InputJRAIEEEMMGridStream::anl_isentrop_level_types[175]={};
const float InputJRAIEEEMMGridStream::anl_isentrop_level_values[175]={270.,280.,290.,300.,310.,320.,330.,340.,350.,360.,370.,380.,390.,400.,425.,450.,475.,550.,650.,750.,270.,280.,290.,300.,310.,320.,330.,340.,350.,360.,370.,380.,390.,400.,425.,450.,475.,550.,650.,750.,270.,280.,290.,300.,310.,320.,330.,340.,350.,360.,370.,380.,390.,400.,425.,450.,475.,550.,650.,750.,0.,270.,280.,290.,300.,310.,320.,330.,340.,350.,360.,370.,380.,390.,400.,270.,280.,290.,300.,310.,320.,330.,340.,350.,360.,370.,380.,390.,400.,425.,450.,475.,550.,650.,750.,270.,280.,290.,300.,310.,320.,330.,340.,350.,360.,370.,380.,390.,400.,425.,450.,475.,550.,650.,750.,270.,280.,290.,300.,310.,320.,330.,340.,350.,360.,370.,380.,390.,400.,425.,450.,475.,550.,650.,750.,270.,280.,290.,300.,310.,320.,330.,340.,350.,360.,370.,380.,390.,400.,425.,450.,475.,550.,650.,750.,270.,280.,290.,300.,310.,320.,330.,340.,350.,360.,370.,380.,390.,400.,425.,450.,475.,550.,650.,750.};
const short InputJRAIEEEMMGridStream::anl_isentrop_parameters[175]={132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,13,51,51,51,51,51,51,51,51,51,51,51,51,51,51,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4};
const short InputJRAIEEEMMGridStream::anl_land_level_types[7]={1,-1,-2,-3,1,111,1};
const float InputJRAIEEEMMGridStream::anl_land_level_values[7]={0.,0.,0.,0.,0.,0.,0.};
const short InputJRAIEEEMMGridStream::anl_land_parameters[7]={145,86,86,86,144,85,65};
const short InputJRAIEEEMMGridStream::anl_mdl_level_types[290]={};
const float InputJRAIEEEMMGridStream::anl_mdl_level_values[290]={1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,0.,0.,2.,2.,2.,10.,10.,0.,0.,0.};
const short InputJRAIEEEMMGridStream::anl_mdl_parameters[290]={7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,8,1,11,51,52,33,34,54,157,152};
const short InputJRAIEEEMMGridStream::anl_p_level_types[138]={100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,102,105,105,105,105,105};
const float InputJRAIEEEMMGridStream::anl_p_level_values[138]={1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,1000.,925.,850.,700.,600.,500.,400.,300.,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,0.,2.,2.,2.,10.,10.};
const short InputJRAIEEEMMGridStream::anl_p_parameters[138]={7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,51,51,51,51,51,51,51,51,51,51,51,51,18,18,18,18,18,18,18,18,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,76,76,76,76,76,76,76,76,76,76,76,76,2,11,51,18,33,34};
const short InputJRAIEEEMMGridStream::anl_snow_level_types[1]={1};
const float InputJRAIEEEMMGridStream::anl_snow_level_values[1]={0.};
const short InputJRAIEEEMMGridStream::anl_snow_parameters[1]={66};
const short InputJRAIEEEMMGridStream::anl_z_level_types[145]={};
const float InputJRAIEEEMMGridStream::anl_z_level_values[145]={1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,0.,0.,2.,2.,10.,10.};
const short InputJRAIEEEMMGridStream::anl_z_parameters[145]={7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,51,51,51,51,51,51,51,51,51,51,51,51,76,76,76,76,76,76,76,76,76,76,76,76,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,1,2,11,51,33,34};
const short InputJRAIEEEMMGridStream::fcst_mdl_level_types[328]={};
const float InputJRAIEEEMMGridStream::fcst_mdl_level_values[328]={1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,0.,2.,2.,10.,10.,0.,0.,0.};
const short InputJRAIEEEMMGridStream::fcst_mdl_parameters[328]={76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,1,11,51,33,34,61,64,80};
const char *InputJRAIEEEMMGridStream::fcst_mdl_time_ranges[328]={};
const short InputJRAIEEEMMGridStream::fcst_phy2m_level_types[60]={1,1,1,8,1,8,1,1,1,1,8,1,1,1,1,1,1,1,1,1,1,1,1,1,102,1,1,1,1,1,1,1,109,1,1,105,105,105,109,105,1,1,105,109,1,8,105,1,8,1,1,105,109,105,1,1,1,105,109,1};
const float InputJRAIEEEMMGridStream::fcst_phy2m_level_values[60]={0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.,0.,2.,2.,2.,1.,2.,0.,0.,10.,1.,0.,0.,10.,0.,0.,0.,0.,10.,1.,10.,0.,0.,0.,10.,1.,0.};
const short InputJRAIEEEMMGridStream::fcst_phy2m_parameters[60]={63,163,161,162,160,160,76,8,205,204,204,147,148,159,154,169,168,75,91,73,121,74,62,1,2,220,54,139,52,83,122,51,51,64,71,15,16,11,11,138,218,124,33,33,212,212,136,211,211,157,125,34,34,137,200,201,152,219,219,80};
const char *InputJRAIEEEMMGridStream::fcst_phy2m_time_ranges[60]={"MN  ","MN  ","MN  ","MN  ","MN  ","MN  ","AC  ","SNP ","MN  ","MN  ","MN  ","MN  ","MN  ","MN  ","MN  ","N/A ","N/A ","MN  ","MN  ","MN  ","MN  ","MN  ","MN  ","SNP ","SNP ","MAX ","SNP ","MN  ","SNP ","SNP ","MN  ","SNP ","SNP ","MN  ","MN  ","MAX ","MIN ","SNP ","SNP ","MN  ","MN  ","MN  ","SNP ","SNP ","MN  ","MN  ","MN  ","MN  ","MN  ","MN  ","MN  ","SNP ","SNP ","MN  ","MN  ","MN  ","MN  ","MAX ","MAX ","MN  "};
const short InputJRAIEEEMMGridStream::fcst_phy3m_level_types[1202]={

};
const float InputJRAIEEEMMGridStream::fcst_phy3m_level_values[1202]={1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,
33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,0.,0.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,
1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.};
const short InputJRAIEEEMMGridStream::fcst_phy3m_parameters[1202]={222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,

177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178};
const char *InputJRAIEEEMMGridStream::fcst_phy3m_time_ranges[1202]={

};
const short InputJRAIEEEMMGridStream::fcst_phyland_level_types[12]={1,1,1,1,1,1,-1,-2,-3,1,1,1};
const float InputJRAIEEEMMGridStream::fcst_phyland_level_values[12]={0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.};
const short InputJRAIEEEMMGridStream::fcst_phyland_parameters[12]={144,145,85,155,224,223,86,86,86,202,203,90};
const char *InputJRAIEEEMMGridStream::fcst_phyland_time_ranges[12]={"SNP ","SNP ","SNP ","MN  ","SNP ","SNP ","SNP ","SNP ","SNP ","MN  ","MN  ","MN  "};
const short InputJRAIEEEMMGridStream::ges_mdl_level_types[328]={};
const float InputJRAIEEEMMGridStream::ges_mdl_level_values[328]={1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,36.,37.,38.,39.,40.,0.,0.,0.,2.,2.,2.,10.,10.};
const short InputJRAIEEEMMGridStream::ges_mdl_parameters[328]={7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,8,1,2,11,51,52,33,34};
const short InputJRAIEEEMMGridStream::ges_p_level_types[153]={};
const float InputJRAIEEEMMGridStream::ges_p_level_values[153]={1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,1000.,925.,850.,700.,600.,500.,400.,300.,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,0.4,1000.,925.,850.,700.,600.,500.,400.,300.,250.,200.,150.,100.,0.,2.,2.,2.,10.,10.};
const short InputJRAIEEEMMGridStream::ges_p_parameters[153]={7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,51,51,51,51,51,51,51,51,51,51,51,51,18,18,18,18,18,18,18,18,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,76,76,76,76,76,76,76,76,76,76,76,76,2,11,51,18,33,34};

int InputJRAIEEEMMGridStream::peek()
{
  unsigned char buffer[300000];
  int bytes_read;

  if (fs.is_open()) {
    bytes_read=read(buffer,300000);
    if (bytes_read != bfstream::error && bytes_read != bfstream::eof) {
      fs.seekg(-(bytes_read-48),std::ios_base::cur);
      --num_read;
    }
    return bytes_read;
  }
  else {
    return bfstream::error;
  }
}

bool InputJRAIEEEMMGridStream::open(std::string filename)
{
  std::string fname,sdum;
  std::deque<std::string> sp;
  int idx;
  size_t n;

  fname=filename;
  idx=fname.rfind("/");
  if (idx > 0)
    fname=fname.substr(idx);
  sp=strutils::split(fname,".");
  yr=-1;
  file_type="";
  for (n=0; n < sp.size(); n++) {
    sdum=sp[n];
    if (strutils::is_numeric(sdum)) {
	if (sdum.length() == 6) {
	  yr=std::stoi(sdum.substr(0,4));
	  mo=std::stoi(sdum.substr(4));
	}
    }
    else if (strutils::has_beginning(sdum,"anl_") || strutils::has_beginning(sdum,"fcst_") || strutils::has_beginning(sdum,"ges_"))
	file_type=sdum;
  }
  if (yr < 0) {
    std::cerr << "Error: unable to determine date of grids" << std::endl;
    exit(1);
  }
  if (file_type.length() == 0) {
    std::cerr << "Error: unable to determine file type" << std::endl;
    exit(1);
  }
  fs.open(filename.c_str(),std::ios::in);
  if (!fs.is_open()) {
    return false;
  }
  if (file_type == "anl_chipsi" || file_type == "anl_p" || file_type == "ges_p") {
    def_type=Grid::latitudeLongitudeType;
    dimx=288;
    dimy=145;
    xres=1.25;
    yres=1.25;
  }
  else if (file_type == "anl_chipsi25" || file_type == "anl_isentrop25" || file_type == "anl_land25" || file_type == "anl_p25" || file_type == "anl_snow25" || file_type == "fcst_phy2m25" || file_type == "fcst_phy3m25" || file_type == "ges_p25") {
    def_type=Grid::latitudeLongitudeType;
    dimx=144;
    dimy=73;
    xres=2.5;
    yres=2.5;
  }
  else if (file_type == "anl_isentrop" || file_type == "anl_land" || file_type == "anl_mdl" || file_type == "anl_snow106_mdl" || file_type == "fcst_mdl" || file_type == "fcst_phy2m" || file_type == "fcst_phy3m" || file_type == "fcst_phyland" || file_type == "ges_mdl") {
    def_type=Grid::gaussianLatitudeLongitudeType;
    dimx=320;
    dimy=160;
    xres=1.125;
    yres=80;
  }
  else if (file_type == "anl_z") {
    def_type=Grid::latitudeLongitudeType;
    dimx=1;
    dimy=145;
    xres=1.25;
    yres=1.25;
  }
  else if (file_type == "anl_z25") {
    def_type=Grid::latitudeLongitudeType;
    dimx=1;
    dimy=73;
    xres=2.5;
    yres=2.5;
  }
  recln=dimx*dimy*4;
  return true;
}

int InputJRAIEEEMMGridStream::read(unsigned char *buffer,size_t buffer_length)
{
  size_t bytes_read;
  int *ihdr=reinterpret_cast<int *>(const_cast<unsigned char *>(buffer));
  float *fhdr=reinterpret_cast<float *>(const_cast<unsigned char *>(buffer));
  static const char *ANL="ANL ";

  if (buffer_length < (recln+48)) {
    std::cerr << "Error: buffer overflow" << std::endl;
    exit(1);
  }
// read a grid from the stream
  if (fs.is_open()) {
    fs.read(reinterpret_cast<char *>(&buffer[48]),recln);
    if (fs.eof()) {
	return bfstream::eof;
    }
    else if (!fs.good()) {
	return bfstream::error;
    }
    bytes_read=fs.gcount();
    if (bytes_read < recln) {
	bytes_read=bfstream::error;
    }
    else {
	ihdr[0]=yr;
	ihdr[1]=mo;
	ihdr[4]=def_type;
	ihdr[5]=dimx;
	ihdr[6]=dimy;
	fhdr[7]=xres;
	fhdr[8]=yres;
	if (strutils::has_beginning(file_type,"anl_chipsi")) {
	  ihdr[2]=0;
	  std::copy(&ANL[0],&ANL[4],&buffer[12]);
	  ihdr[9]=anl_chipsi_level_types[num_read];
	  fhdr[10]=anl_chipsi_level_values[num_read];
	  ihdr[11]=anl_chipsi_parameters[num_read];
	}
	else if (strutils::has_beginning(file_type,"anl_isentrop")) {
	  ihdr[2]=0;
	  std::copy(&ANL[0],&ANL[4],&buffer[12]);
	  ihdr[9]=anl_isentrop_level_types[num_read];
	  fhdr[10]=anl_isentrop_level_values[num_read];
	  ihdr[11]=anl_isentrop_parameters[num_read];
	}
	else if (strutils::has_beginning(file_type,"anl_land")) {
	  ihdr[2]=0;
	  std::copy(&ANL[0],&ANL[4],&buffer[12]);
	  ihdr[9]=anl_land_level_types[num_read];
	  fhdr[10]=anl_land_level_values[num_read];
	  ihdr[11]=anl_land_parameters[num_read];
	}
	else if (strutils::has_beginning(file_type,"anl_mdl")) {
	  ihdr[2]=0;
	  std::copy(&ANL[0],&ANL[4],&buffer[12]);
	  ihdr[9]=anl_mdl_level_types[num_read];
	  fhdr[10]=anl_mdl_level_values[num_read];
	  ihdr[11]=anl_mdl_parameters[num_read];
	}
	else if (strutils::has_beginning(file_type,"anl_p")) {
	  ihdr[2]=0;
	  std::copy(&ANL[0],&ANL[4],&buffer[12]);
	  ihdr[9]=anl_p_level_types[num_read];
	  fhdr[10]=anl_p_level_values[num_read];
	  ihdr[11]=anl_p_parameters[num_read];
	}
	else if (strutils::has_beginning(file_type,"anl_snow")) {
	  ihdr[2]=0;
	  std::copy(&ANL[0],&ANL[4],&buffer[12]);
	  ihdr[9]=anl_snow_level_types[num_read];
	  fhdr[10]=anl_snow_level_values[num_read];
	  ihdr[11]=anl_snow_parameters[num_read];
	}
	else if (strutils::has_beginning(file_type,"anl_z")) {
	  ihdr[2]=0;
	  std::copy(&ANL[0],&ANL[4],&buffer[12]);
	  ihdr[9]=anl_z_level_types[num_read];
	  fhdr[10]=anl_z_level_values[num_read];
	  ihdr[11]=anl_z_parameters[num_read];
	}
	else if (strutils::has_beginning(file_type,"fcst_mdl")) {
	  ihdr[2]=6;
	  std::copy(fcst_mdl_time_ranges[num_read],fcst_mdl_time_ranges[num_read+4],&buffer[12]);
	  ihdr[9]=fcst_mdl_level_types[num_read];
	  fhdr[10]=fcst_mdl_level_values[num_read];
	  ihdr[11]=fcst_mdl_parameters[num_read];
	}
	else if (strutils::has_beginning(file_type,"fcst_phy2m")) {
	  ihdr[2]=6;
	  std::copy(fcst_phy2m_time_ranges[num_read],fcst_phy2m_time_ranges[num_read+4],&buffer[12]);
	  ihdr[9]=fcst_phy2m_level_types[num_read];
	  fhdr[10]=fcst_phy2m_level_values[num_read];
	  ihdr[11]=fcst_phy2m_parameters[num_read];
	}
	else if (strutils::has_beginning(file_type,"fcst_phy3m")) {
	  ihdr[2]=6;
	  std::copy(fcst_phy3m_time_ranges[num_read],fcst_phy3m_time_ranges[num_read+4],&buffer[12]);
	  ihdr[9]=fcst_phy3m_level_types[num_read];
	  fhdr[10]=fcst_phy3m_level_values[num_read];
	  ihdr[11]=fcst_phy3m_parameters[num_read];
	}
	else if (strutils::has_beginning(file_type,"fcst_phyland")) {
	  ihdr[2]=6;
	  std::copy(fcst_phyland_time_ranges[num_read],fcst_phyland_time_ranges[num_read+4],&buffer[12]);
	  ihdr[9]=fcst_phyland_level_types[num_read];
	  fhdr[10]=fcst_phyland_level_values[num_read];
	  ihdr[11]=fcst_phyland_parameters[num_read];
	}
	else if (strutils::has_beginning(file_type,"ges_mdl")) {
	  ihdr[2]=6;
	  std::copy(&ANL[0],&ANL[4],&buffer[12]);
	  ihdr[9]=ges_mdl_level_types[num_read];
	  fhdr[10]=ges_mdl_level_values[num_read];
	  ihdr[11]=ges_mdl_parameters[num_read];
	}
	else if (strutils::has_beginning(file_type,"ges_p")) {
	  ihdr[2]=6;
	  std::copy(&ANL[0],&ANL[4],&buffer[12]);
	  ihdr[9]=ges_p_level_types[num_read];
	  fhdr[10]=ges_p_level_values[num_read];
	  ihdr[11]=ges_p_parameters[num_read];
	}
	bytes_read+=48;
    }
  }
  else {
    return bfstream::error;
  }
  ++num_read;
  return bytes_read;
}

JRAIEEEMMGrid& JRAIEEEMMGrid::operator=(const JRAIEEEMMGrid& source)
{
  int n,m,cnt=0;
  int dimy=dim.y-1;

  if (this == &source) {
    return *this;
  }
  reference_date_time_=source.reference_date_time_;
  valid_date_time_=source.valid_date_time_;
  dim=source.dim;
  def=source.def;
  grid.param=source.grid.param;
  grid.level1=source.grid.level1;
  grid.filled=source.grid.filled;
  stats.min_val=Grid::missing_value;
  stats.max_val=-Grid::missing_value;
  stats.avg_val=0.;
  if (source.grid.filled) {
    if (gridpoints_ == nullptr) {
	gridpoints_=new double *[dimy];
	for (n=0; n < dimy; ++n) {
	  gridpoints_[n]=new double[dim.x];
	}
    }
    for (n=0; n < dimy; ++n) {
	for (m=0; m < dim.x; ++m) {
	  gridpoints_[n][m]=source.gridpoints_[n][m];
	  if (!floatutils::myequalf(gridpoints_[n][m],Grid::missing_value)) {
	    if (gridpoints_[n][m] > stats.max_val) {
		stats.max_val=gridpoints_[n][m];
	    }
	    if (gridpoints_[n][m] < stats.min_val) {
		stats.min_val=gridpoints_[n][m];
	    }
	    stats.avg_val+=gridpoints_[n][m];
	    ++cnt;
	  }
	}
    }
  }
  if (cnt > 0) {
    stats.avg_val/=static_cast<float>(cnt);
  }
  return *this;
}

size_t JRAIEEEMMGrid::copy_to_buffer(unsigned char *output_buffer,const size_t buffer_length) const
{
return 0;
}

void JRAIEEEMMGrid::fill(const unsigned char *stream_buffer,bool fill_header_only)
{
  int *ihdr=reinterpret_cast<int *>(const_cast<unsigned char *>(stream_buffer));
  float *fhdr=reinterpret_cast<float *>(const_cast<unsigned char *>(stream_buffer));
  float *data=reinterpret_cast<float *>(const_cast<unsigned char *>(&stream_buffer[48]));
  int n,m,cnt=0,avg_cnt=0;

  if (stream_buffer == nullptr) {
    std::cerr << "Error: empty file stream" << std::endl;
    exit(1);
  }
// unpack the grid header
  reference_date_time_.set(ihdr[0],ihdr[1],1,0);
  grid.fcst_time=ihdr[2]*10000;
  valid_date_time_=reference_date_time_.time_added(grid.fcst_time);
  time_range_.assign(&(reinterpret_cast<char *>(const_cast<unsigned char *>(stream_buffer)))[12],4);
  def.type=static_cast<short>(ihdr[4]);
  dim.x=static_cast<short>(ihdr[5]);
  dim.y=static_cast<short>(ihdr[6]);
  dim.size=dim.x*dim.y;
  def.loincrement=fhdr[7];
  def.elongitude=def.slongitude+(dim.x-1)*def.loincrement;
  if (def.type == Grid::latitudeLongitudeType) {
    def.laincrement=fhdr[8];
    def.slatitude=-90.;
    def.elatitude=90.;
  }
  else if (def.type == Grid::gaussianLatitudeLongitudeType) {
    def.num_circles=static_cast<int>(fhdr[8]);
    def.slatitude=-89.142;
    def.elatitude=89.142;
  }
  grid.level1_type=static_cast<short>(ihdr[9]);
  grid.level1=fhdr[10];
  grid.param=static_cast<short>(ihdr[11]);
  grid.filled=false;

// unpack the JRAIEEEMM grid gridpoints
  if (!fill_header_only) {
// if memory has not yet been allocated for the gridpoints, do it now
    if (gridpoints_ == nullptr) {
	gridpoints_=new double *[dim.y];
	for (n=0; n < dim.y; ++n) {
	  gridpoints_[n]=new double[dim.x];
	}
    }
    stats.max_val=-Grid::missing_value;
    stats.min_val=Grid::missing_value;
    stats.avg_val=0.;
    for (n=0; n < dim.y; ++n) {
	for (m=0; m < dim.x; ++m,++cnt) {
	  if (data[cnt] > 9.e+20) {
	    gridpoints_[n][m]=Grid::missing_value;
	  }
	  else {
	    gridpoints_[n][m]=data[cnt];
	    if (gridpoints_[n][m] > stats.max_val) {
		stats.max_val=gridpoints_[n][m];
		stats.max_i=m+1;
		stats.max_j=n+1;
	    }
	    if (gridpoints_[n][m] < stats.min_val) {
		stats.min_val=gridpoints_[n][m];
		stats.min_i=m+1;
		stats.min_j=n+1;
	    }
	    stats.avg_val+=gridpoints_[n][m];
	    avg_cnt++;
	  }
	}
    }
    stats.avg_val/=static_cast<float>(avg_cnt);
    grid.filled=true;
  }
}

void JRAIEEEMMGrid::print(std::ostream& outs) const
{
  int n,m,l,stop;

  outs.setf(std::ios::fixed);
  outs.precision(3);
  if (grid.filled) {
    for (m=0; m < dim.x; m+=7) {
	outs << std::endl;
	outs << "         ";
	stop=m+7;
	if (stop > dim.x) {
	  stop=dim.x;
	}
	for (l=m; l < stop; ++l) {
	  outs << std::setw(10) << l*def.loincrement;
	}
	outs << std::endl;
	outs << "        +";
	for (l=m; l < stop; ++l) {
	  outs << "----------";
	}
	outs << std::endl;
	for (n=0; n < dim.y; n++) {
	  outs << std::setw(7) << n*def.laincrement-90. << " |";
	  for (l=m; l < stop; ++l) {
	    outs << std::setw(10) << gridpoints_[n][l];
	  }
	  outs << std::endl;
	}
    }
  }
}

void JRAIEEEMMGrid::print(std::ostream& outs,float start_latitude,float end_latitude,float start_longitude,float end_longitude,float lat_increment,float lon_increment,bool full_longitude_strip) const
{
}

void JRAIEEEMMGrid::print_ascii(std::ostream& outs) const
{
}

void JRAIEEEMMGrid::v_print_header(std::ostream& outs,bool verbose,std::string path_to_parameter_map) const
{
  std::string sdum;

  outs.setf(std::ios::fixed);
  outs.precision(3);
  if (verbose)
    outs << " MONTHLY GRID -- Date: " << reference_date_time_.to_string("%Y-%m-%d %H %Z") << "  Valid: " << valid_date_time_.to_string("%Y-%m%d %H %Z") << "  Grids in Average: " << std::setw(3) << dateutils::days_in_month(reference_date_time_.year(),reference_date_time_.month())*4 << "  Time Range: " << time_range_ << "  Grid Type: " << def.type << "  Dimensions: " << dim.x << " x " << dim.y << "  Resolution: " << def.loincrement << " x " << def.laincrement << "  Parameter: " << grid.param << "  Level: " << grid.level1_type << "/" << grid.level1 << std::endl;
  else {
    sdum=time_range_;
    strutils::trim(sdum);
    outs << " Time=" << reference_date_time_.to_string("%Y%m%d%H") << " Valid=" << valid_date_time_.to_string("%Y%m%d%H") << " NAvg=" << dateutils::days_in_month(reference_date_time_.year(),reference_date_time_.month())*4 << " TRng=" << sdum << " GrdTyp=" << def.type << " Dims=" << dim.x << "x" << dim.y << " Res=" << def.loincrement << "x" << def.laincrement << " Param=" << grid.param << " Lvl=" << grid.level1_type << "/" << grid.level1;
    if (grid.filled) {
	outs << " Min=" << stats.min_val << " Max=" << stats.max_val << " Avg=" << stats.avg_val;
    }
    outs << std::endl;
  }
}
